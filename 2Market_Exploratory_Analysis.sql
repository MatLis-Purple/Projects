-- Create marketing data table
CREATE TABLE marketing_data (
    ID INT PRIMARY KEY,
    Year_Birth INT,
    Age INT,
    Education VARCHAR(50),
    Marital_Status VARCHAR(50),
    Income_USD NUMERIC(15,2),
    Kidhome INT,
    Teenhome INT,    
    Dt_Customer DATE,
    Recency INT,
    AmtLiq NUMERIC(15,2),
    AmtVege NUMERIC(15,2),
    AmtNonVeg NUMERIC(15,2),
    AmtPes NUMERIC(15,2),
    AmtChocolates NUMERIC(15,2),
    AmtComm NUMERIC(15,2),
    NumDeals INT,
    NumWebBuy INT,
    NumWalkinPur INT,
    NumVisits INT,
    Response INT,
    Complain INT,
    Country VARCHAR(50),
    Count_success INT
);

-- Create ad data table
CREATE TABLE ad_data (
    ID INT PRIMARY KEY,
    Bulkmail_ad NUMERIC(15,2),
    Twitter_ad NUMERIC(15,2),
    Instagram_ad NUMERIC(15,2),
    Facebook_ad NUMERIC(15,2),
    Brochure_ad NUMERIC(15,2)
);
-- Check the tables
SELECT * FROM marketing_data

SELECT * FROM ad_data

-- Standardize country names
UPDATE marketing_data
SET Country = 'Montenegro'
WHERE Country = 'ME';

-- Total spend per country
SELECT Country, 
    SUM(AmtLiq + AmtVege + AmtNonVeg + AmtPes + AmtChocolates + AmtComm) AS Total_Spend
FROM marketing_data
GROUP BY Country
ORDER BY Total_Spend DESC;

-- Total revenue generated by each product category in each country
SELECT Country, 
    SUM(AmtLiq) AS Total_Liquor_Spend,
    SUM(AmtVege) AS Total_Vegetables_Spend,
    SUM(AmtNonVeg) AS Total_Meat_Spend,
    SUM(AmtPes) AS Total_Fish_Spend,
    SUM(AmtChocolates) AS Total_Chocolate_Spend,
    SUM(AmtComm) AS Total_Commodities_Spend 
FROM marketing_data
GROUP BY Country;

-- Most popular products in each country (total spending, not just max single purchase)
SELECT Country,
    SUM(AmtLiq) AS Total_Liquor_Spend,
    SUM(AmtVege) AS Total_Vegetables_Spend,
    SUM(AmtNonVeg) AS Total_Meat_Spend,
    SUM(AmtPes) AS Total_Fish_Spend,
    SUM(AmtChocolates) AS Total_Chocolate_Spend,
    SUM(AmtComm) AS Total_Commodities_Spend
FROM marketing_data
GROUP BY Country;

-- Most popular products per marital status
SELECT Marital_Status, 
    SUM(AmtLiq) AS Most_Popular_Liquor,
    SUM(AmtVege) AS Most_Popular_Vegetables,
    SUM(AmtNonVeg) AS Most_Popular_Meat,
    SUM(AmtPes) AS Most_Popular_Fish,
    SUM(AmtChocolates) AS Most_Popular_Chocolate,
    SUM(AmtComm) AS Most_Popular_Commodities
FROM marketing_data
GROUP BY Marital_Status;

-- Marketing channel engagement by country
SELECT 
    m.Country,
    ROUND(AVG(a.Bulkmail_ad), 2) AS Avg_Bulkmail,
    ROUND(AVG(a.Twitter_ad), 2) AS Avg_Twitter,
    ROUND(AVG(a.Facebook_ad), 2) AS Avg_Facebook,
    ROUND(AVG(a.Instagram_ad), 2) AS Avg_Instagram,
    ROUND(AVG(a.Brochure_ad), 2) AS Avg_Brochure
FROM marketing_data AS m
LEFT JOIN ad_data AS a ON m.ID = a.ID
GROUP BY m.Country;

-- Marketing channel conversion rates by country
SELECT 
    m.Country,
    SUM(COALESCE(m.Count_success, 0)) / NULLIF(SUM(a.Bulkmail_ad), 0) AS Conversion_Rate_Bulkmail,
    SUM(COALESCE(m.Count_success, 0)) / NULLIF(SUM(a.Twitter_ad), 0) AS Conversion_Rate_Twitter,
    SUM(COALESCE(m.Count_success, 0)) / NULLIF(SUM(a.Facebook_ad), 0) AS Conversion_Rate_Facebook,
    SUM(COALESCE(m.Count_success, 0)) / NULLIF(SUM(a.Instagram_ad), 0) AS Conversion_Rate_Instagram,
    SUM(COALESCE(m.Count_success, 0)) / NULLIF(SUM(a.Brochure_ad), 0) AS Conversion_Rate_Brochure
FROM marketing_data AS m
LEFT JOIN ad_data AS a ON m.ID = a.ID
GROUP BY m.Country
ORDER BY m.Country;

-- Marketing channel contribution to total sales per country
SELECT 
    m.Country,
    SUM(a.Bulkmail_ad * m.Count_success) AS Total_Sales_Bulkmail,
    SUM(a.Twitter_ad * m.Count_success) AS Total_Sales_Twitter,
    SUM(a.Facebook_ad * m.Count_success) AS Total_Sales_Facebook,
    SUM(a.Instagram_ad * m.Count_success) AS Total_Sales_Instagram,
    SUM(a.Brochure_ad * m.Count_success) AS Total_Sales_Brochure
FROM marketing_data AS m
LEFT JOIN ad_data AS a ON m.ID = a.ID
GROUP BY m.Country
ORDER BY m.Country;

-- Age group revenue analysis
SELECT 
    CASE 
        WHEN Age < 25 THEN '< 25'
        WHEN Age BETWEEN 25 AND 34 THEN '25-34'
        WHEN Age BETWEEN 35 AND 44 THEN '35-44'
        WHEN Age BETWEEN 45 AND 54 THEN '45-54'
        WHEN Age BETWEEN 55 AND 64 THEN '55-64'
        WHEN Age BETWEEN 65 AND 74 THEN '65-74'
        ELSE '75+'
    END AS Age_Group,
    SUM(AmtLiq + AmtVege + AmtNonVeg + AmtPes + AmtChocolates + AmtComm) AS Total_Sales
FROM marketing_data
GROUP BY Age_Group
ORDER BY Age_Group;

-- Most revenue-generating channel per age group
SELECT 
    CASE 
        WHEN Age < 25 THEN '< 25'
        WHEN Age BETWEEN 25 AND 34 THEN '25-34'
        WHEN Age BETWEEN 35 AND 44 THEN '35-44'
        WHEN Age BETWEEN 45 AND 54 THEN '45-54'
        WHEN Age BETWEEN 55 AND 64 THEN '55-64'
        WHEN Age BETWEEN 65 AND 74 THEN '65-74'
        ELSE '75+'
    END AS Age_Group,
    SUM(a.Bulkmail_ad * m.Count_success) AS Total_Sales_Bulkmail,
    SUM(a.Twitter_ad * m.Count_success) AS Total_Sales_Twitter,
    SUM(a.Facebook_ad * m.Count_success) AS Total_Sales_Facebook,
    SUM(a.Instagram_ad * m.Count_success) AS Total_Sales_Instagram,
    SUM(a.Brochure_ad * m.Count_success) AS Total_Sales_Brochure,
    SUM((a.Bulkmail_ad + a.Twitter_ad + a.Facebook_ad + a.Instagram_ad + a.Brochure_ad) * m.Count_success) AS Total_Sales_All_Channels
FROM marketing_data AS m
LEFT JOIN ad_data AS a ON m.ID = a.ID
GROUP BY Age_Group
ORDER BY Age_Group;

-- Distribution of consumers by number of children
SELECT Kidhome + Teenhome AS Total_Children, COUNT(*) AS Num_Consumers
FROM marketing_data
GROUP BY Total_Children
ORDER BY Total_Children;

-- Revenue generated by consumer groups with different number of children
SELECT Kidhome + Teenhome AS Total_Children,
    SUM(AmtLiq + AmtVege + AmtNonVeg + AmtPes + AmtChocolates + AmtComm) AS Total_Revenue
FROM marketing_data
GROUP BY Total_Children
ORDER BY Total_Children;






